{"version":3,"sources":["pages/about.js","pages/contact.js","components/navbar.js","components/carousel.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["About","Contact","MyNavbar","Navbar","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","activeKey","Link","NavDropdown","title","Item","Divider","Badge","ButtonToolbar","Button","MyCarousel","Carousel","src","alt","Caption","Footer","Component","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mSAQeA,EAND,WACV,OACI,yCCIOC,EANC,WACZ,OACI,2C,wDC+BOC,MA/Bf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QAC1B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,QACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,iCAAiCC,UAAU,SAC1D,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIG,KAAL,CAAUR,KAAK,UAAf,SACA,kBAACS,EAAA,EAAD,CAAaC,MAAM,UAAUN,GAAG,sBAC9B,kBAACK,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,gBACA,kBAACS,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,gBACA,kBAACS,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,uBACA,kBAACS,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,sBACA,kBAACS,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,wBACA,kBAACS,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBX,KAAK,eAAvB,UACO,kBAACa,EAAA,EAAD,CAAOf,QAAQ,WAAf,SAGT,kBAACO,EAAA,EAAIG,KAAL,CAAUR,KAAK,YAAf,YAEF,kBAACc,EAAA,EAAD,CAAeR,UAAU,WAC3B,kBAACS,EAAA,EAAD,CAAQT,UAAU,UAAUR,QAAQ,mBAApC,aACA,kBAACiB,EAAA,EAAD,CAAQjB,QAAQ,WAAhB,e,QCkBakB,MA1Cf,WACE,OACI,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAASN,KAAV,KACE,yBACEL,UAAU,gBACVY,IAAM,4DACNC,IAAI,gBAEN,kBAACF,EAAA,EAASG,QAAV,KACE,0CACA,mFAGJ,kBAACH,EAAA,EAASN,KAAV,KACE,yBACEL,UAAU,gBACVY,IAAI,4DACJC,IAAI,iBAGN,kBAACF,EAAA,EAASG,QAAV,KACE,2CACA,gGAGJ,kBAACH,EAAA,EAASN,KAAV,KACE,yBACEL,UAAU,gBACVY,IAAI,2DACJC,IAAI,gBAGN,kBAACF,EAAA,EAASG,QAAV,KACE,kDACA,2ECzBGC,G,uLATP,OACI,gCACI,+E,GAJKC,cCmCNC,E,iLAvBX,OACE,kBAAC,IAAD,KACA,yBAAKjB,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,MAElB,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,QAGL,kBAAC,EAAD,Y,GAjBWH,aCDEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ebec5c2c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <h1>About Us</h1>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <h1>Contact Us</h1>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav, NavDropdown, Button, ButtonToolbar, Badge } from 'react-bootstrap';\r\n\r\nfunction MyNavbar() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">DEMO</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto justify-content-center\" activeKey=\"/home\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#about\">About</Nav.Link>\r\n      <NavDropdown title=\"Courses\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">UX/UI Design</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Data Science</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Backend Development</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Mobile Development</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Frontend Development</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">\r\n        DevOps <Badge variant=\"success\">new</Badge>\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n      <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n    </Nav>\r\n    <ButtonToolbar className=\"mr-sm-4\">\r\n  <Button className=\"mr-sm-3\" variant=\"outline-success\">Apply Now</Button>\r\n  <Button variant=\"success\">Sign Up</Button>\r\n</ButtonToolbar>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n  )\r\n}\r\n\r\nexport default MyNavbar;\r\n/*<Button variant=\"primary\">\r\n  Profile <Badge variant=\"light\">9</Badge>\r\n  <span className=\"sr-only\">unread messages</span>\r\n</Button> */","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nfunction MyCarousel() {\r\n  return (\r\n      <Carousel>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src = \"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>Ocean View</h3>\r\n            <p> This is a natural beauty view of the ocean side..</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Forest View</h3>\r\n            <p>Thi is the forest view spot of the Japan's Shirokioma mountain.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Sambia Forest Tree</h3>\r\n            <p>A forest tour to Germany's largest tree.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n  )\r\n}\r\n\r\nexport default MyCarousel;\r\n/*\r\n<Image src=\"holder.js/100px250\" fluid />\r\n*/","import React,{ Component } from \"react\";\r\nimport './components.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <p>&copy;Festus Ebin \r\n                | 2020. All Rights reserved</p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './pages/about';\nimport Contact from './pages/contact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyNavbar from './components/navbar';\nimport MyCarousel from './components/carousel';\nimport Footer from './components/footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n       <MyNavbar />\n       <MyCarousel />\n        <Switch>\n          <Route exact path=\"/\">\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>\n       <Footer />\n      </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}